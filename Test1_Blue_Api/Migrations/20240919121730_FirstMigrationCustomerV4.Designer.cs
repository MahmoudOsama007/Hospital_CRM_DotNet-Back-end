// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test1_Blue_Api.Data;

#nullable disable

namespace Test1_Blue_Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240919121730_FirstMigrationCustomerV4")]
    partial class FirstMigrationCustomerV4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Test1_Blue_Api.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Zamalek"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Name = "Maadi"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 1,
                            Name = "Heliopolis"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 1,
                            Name = "Nasr City"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 1,
                            Name = "Downtown"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 2,
                            Name = "Smouha"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 2,
                            Name = "Sidi Gaber"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 2,
                            Name = "Montaza"
                        },
                        new
                        {
                            Id = 9,
                            CityId = 2,
                            Name = "Stanley"
                        },
                        new
                        {
                            Id = 10,
                            CityId = 2,
                            Name = "Sporting"
                        },
                        new
                        {
                            Id = 11,
                            CityId = 3,
                            Name = "Mohandessin"
                        },
                        new
                        {
                            Id = 12,
                            CityId = 3,
                            Name = "6th of October City"
                        },
                        new
                        {
                            Id = 13,
                            CityId = 3,
                            Name = "Dokki"
                        },
                        new
                        {
                            Id = 14,
                            CityId = 3,
                            Name = "Haram"
                        },
                        new
                        {
                            Id = 15,
                            CityId = 3,
                            Name = "Sheikh Zayed"
                        },
                        new
                        {
                            Id = 16,
                            CityId = 4,
                            Name = "Daraw"
                        },
                        new
                        {
                            Id = 17,
                            CityId = 4,
                            Name = "Kom Ombo"
                        },
                        new
                        {
                            Id = 18,
                            CityId = 4,
                            Name = "Edfu"
                        },
                        new
                        {
                            Id = 19,
                            CityId = 5,
                            Name = "Al Bayadiyah"
                        },
                        new
                        {
                            Id = 20,
                            CityId = 5,
                            Name = "Karnak"
                        },
                        new
                        {
                            Id = 21,
                            CityId = 5,
                            Name = "Al Mabad"
                        },
                        new
                        {
                            Id = 22,
                            CityId = 6,
                            Name = "Naama Bay"
                        },
                        new
                        {
                            Id = 23,
                            CityId = 6,
                            Name = "Ras Nasrani"
                        },
                        new
                        {
                            Id = 24,
                            CityId = 6,
                            Name = "Shark's Bay"
                        },
                        new
                        {
                            Id = 25,
                            CityId = 7,
                            Name = "El Gouna"
                        },
                        new
                        {
                            Id = 26,
                            CityId = 7,
                            Name = "Sahl Hasheesh"
                        },
                        new
                        {
                            Id = 27,
                            CityId = 7,
                            Name = "Al Kawthar"
                        },
                        new
                        {
                            Id = 28,
                            CityId = 8,
                            Name = "Al Manakh"
                        },
                        new
                        {
                            Id = 29,
                            CityId = 8,
                            Name = "Al Arab"
                        },
                        new
                        {
                            Id = 30,
                            CityId = 8,
                            Name = "Al Sharq"
                        },
                        new
                        {
                            Id = 31,
                            CityId = 9,
                            Name = "Al Arbaeen"
                        },
                        new
                        {
                            Id = 32,
                            CityId = 9,
                            Name = "Faisal"
                        },
                        new
                        {
                            Id = 33,
                            CityId = 9,
                            Name = "Ataka"
                        },
                        new
                        {
                            Id = 34,
                            CityId = 10,
                            Name = "El Salam"
                        },
                        new
                        {
                            Id = 35,
                            CityId = 10,
                            Name = "Sheikh Zayed"
                        },
                        new
                        {
                            Id = 36,
                            CityId = 10,
                            Name = "Al Sabah"
                        });
                });

            modelBuilder.Entity("Test1_Blue_Api.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cairo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Alexandria"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Giza"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Aswan"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Luxor"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sharm El-Sheikh"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Hurghada"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Port Said"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Suez"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Ismailia"
                        });
                });

            modelBuilder.Entity("Test1_Blue_Api.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("Test1_Blue_Api.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LandLineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientNumber")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Test1_Blue_Api.Models.Area", b =>
                {
                    b.HasOne("Test1_Blue_Api.Models.City", "City")
                        .WithMany("Area")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Test1_Blue_Api.Models.Customer", b =>
                {
                    b.HasOne("Test1_Blue_Api.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Test1_Blue_Api.Models.City", null)
                        .WithMany("customer")
                        .HasForeignKey("CityId");

                    b.HasOne("Test1_Blue_Api.Models.Company", "Company")
                        .WithMany("Customer")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Test1_Blue_Api.Models.City", b =>
                {
                    b.Navigation("Area");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("Test1_Blue_Api.Models.Company", b =>
                {
                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
